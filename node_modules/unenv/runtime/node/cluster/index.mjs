import noop from "../../mock/noop.mjs";
import mock from "../../mock/proxy.mjs";
import { EventEmitter } from "../events/index.mjs";
const _cluster = new EventEmitter();
export const disconnect = noop;
export const fork = () => mock.__createMock__("cluster.Worker");
export const isMaster = true;
export const isPrimary = true;
export const isWorker = false;
export const SCHED_NONE = 1;
export const SCHED_RR = 2;
export const schedulingPolicy = SCHED_RR;
export const settings = {};
export const setupPrimary = noop;
export const setupMaster = noop;
export const workers = {};
export const Worker = mock.__createMock__("cluster.Worker");
export const _events = _cluster._events;
export const _eventsCount = _cluster._eventsCount;
export const _maxListeners = _cluster._maxListeners;
_cluster.disconnect = disconnect;
_cluster.fork = fork;
_cluster.isMaster = isMaster;
_cluster.isPrimary = isPrimary;
_cluster.isWorker = isWorker;
_cluster.SCHED_NONE = SCHED_NONE;
_cluster.SCHED_RR = SCHED_RR;
_cluster.schedulingPolicy = SCHED_RR;
_cluster.settings = settings;
_cluster.setupPrimary = setupPrimary;
_cluster.setupMaster = setupMaster;
_cluster.workers = workers;
_cluster.Worker = Worker;
export default _cluster;

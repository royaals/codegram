/// <reference types="node" />
/// <reference types="node" />
import { EventEmitter } from "../../events";
import type net from "node:net";
import type dgram from "node:dgram";
export declare class Socket extends EventEmitter implements dgram.Socket {
    readonly __unenv__ = true;
    bind(): this;
    close(): this;
    ref(): this;
    unref(): this;
    getRecvBufferSize(): number;
    getSendBufferSize(): number;
    getSendQueueSize(): number;
    getSendQueueCount(): number;
    setMulticastLoopback(): boolean;
    setMulticastTTL(): number;
    setTTL(): number;
    address(): net.AddressInfo;
    remoteAddress(): net.AddressInfo;
    [Symbol.asyncDispose](): Promise<void>;
    addMembership(): void;
    addSourceSpecificMembership(): void;
    connect(): void;
    disconnect(): void;
    dropMembership(): void;
    dropSourceSpecificMembership(): void;
    send(): void;
    setSendBufferSize(): void;
    setBroadcast(): void;
    setRecvBufferSize(): void;
    setMulticastInterface(): void;
}

export {
  _debugEnd,
  _debugProcess,
  _eventsCount,
  _fatalException,
  _getActiveHandles,
  _getActiveRequests,
  _kill,
  _preload_modules,
  _rawDebug,
  _startProfilerIdleNotifier,
  _stopProfilerIdleNotifier,
  _tickCallback,
  abort,
  addListener,
  allowedNodeEnvironmentFlags,
  arch,
  argv,
  argv0,
  assert,
  availableMemory,
  binding,
  chdir,
  config,
  constrainedMemory,
  cpuUsage,
  cwd,
  debugPort,
  dlopen,
  emit,
  emitWarning,
  eventNames,
  execArgv,
  execPath,
  exit,
  exitCode,
  features,
  getActiveResourcesInfo,
  getMaxListeners,
  getegid,
  geteuid,
  getgid,
  getgroups,
  getuid,
  hasUncaughtExceptionCaptureCallback,
  hrtime,
  kill,
  listenerCount,
  listeners,
  loadEnvFile,
  memoryUsage,
  off,
  on,
  once,
  pid,
  platform,
  ppid,
  prependListener,
  prependOnceListener,
  rawListeners,
  release,
  removeAllListeners,
  removeListener,
  report,
  resourceUsage,
  setMaxListeners,
  setSourceMapsEnabled,
  setUncaughtExceptionCaptureCallback,
  setegid,
  seteuid,
  setgid,
  setgroups,
  setuid,
  sourceMapsEnabled,
  stderr,
  stdin,
  stdout,
  title,
  umask,
  uptime,
  version,
  versions
} from "./internal/process.mjs";
import {
  _debugEnd as _debugEnd2,
  _debugProcess as _debugProcess2,
  _eventsCount as _eventsCount2,
  _fatalException as _fatalException2,
  _getActiveHandles as _getActiveHandles2,
  _getActiveRequests as _getActiveRequests2,
  _kill as _kill2,
  _preload_modules as _preload_modules2,
  _rawDebug as _rawDebug2,
  _startProfilerIdleNotifier as _startProfilerIdleNotifier2,
  _stopProfilerIdleNotifier as _stopProfilerIdleNotifier2,
  _tickCallback as _tickCallback2,
  abort as abort2,
  addListener as addListener2,
  allowedNodeEnvironmentFlags as allowedNodeEnvironmentFlags2,
  arch as arch2,
  argv as argv2,
  argv0 as argv02,
  assert as assert2,
  availableMemory as availableMemory2,
  binding as binding2,
  chdir as chdir2,
  config as config2,
  constrainedMemory as constrainedMemory2,
  cpuUsage as cpuUsage2,
  cwd as cwd2,
  debugPort as debugPort2,
  dlopen as dlopen2,
  emit as emit2,
  emitWarning as emitWarning2,
  eventNames as eventNames2,
  execArgv as execArgv2,
  execPath as execPath2,
  exit as exit2,
  exitCode as exitCode2,
  features as features2,
  getActiveResourcesInfo as getActiveResourcesInfo2,
  getMaxListeners as getMaxListeners2,
  getegid as getegid2,
  geteuid as geteuid2,
  getgid as getgid2,
  getgroups as getgroups2,
  getuid as getuid2,
  hasUncaughtExceptionCaptureCallback as hasUncaughtExceptionCaptureCallback2,
  hrtime as hrtime2,
  kill as kill2,
  listenerCount as listenerCount2,
  listeners as listeners2,
  loadEnvFile as loadEnvFile2,
  memoryUsage as memoryUsage2,
  off as off2,
  on as on2,
  once as once2,
  pid as pid2,
  platform as platform2,
  ppid as ppid2,
  prependListener as prependListener2,
  prependOnceListener as prependOnceListener2,
  rawListeners as rawListeners2,
  release as release2,
  removeAllListeners as removeAllListeners2,
  removeListener as removeListener2,
  report as report2,
  resourceUsage as resourceUsage2,
  setMaxListeners as setMaxListeners2,
  setSourceMapsEnabled as setSourceMapsEnabled2,
  setUncaughtExceptionCaptureCallback as setUncaughtExceptionCaptureCallback2,
  setegid as setegid2,
  seteuid as seteuid2,
  setgid as setgid2,
  setgroups as setgroups2,
  setuid as setuid2,
  sourceMapsEnabled as sourceMapsEnabled2,
  stderr as stderr2,
  stdin as stdin2,
  stdout as stdout2,
  title as title2,
  umask as umask2,
  uptime as uptime2,
  version as version2,
  versions as versions2
} from "./internal/process.mjs";
const unpatchedGlobalThisProcess = globalThis["process"];
export const getBuiltinModule = unpatchedGlobalThisProcess.getBuiltinModule;
const workerdProcess = getBuiltinModule("node:process");
export const { env, nextTick } = workerdProcess;
export default {
  /**
   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable
   */
  // @ts-expect-error undocumented public API
  _debugEnd: _debugEnd2,
  _debugProcess: _debugProcess2,
  // TODO: implemented yet in unenv
  //_events,
  _eventsCount: _eventsCount2,
  // TODO: implemented yet in unenv
  //_exiting,
  _fatalException: _fatalException2,
  _getActiveHandles: _getActiveHandles2,
  _getActiveRequests: _getActiveRequests2,
  _kill: _kill2,
  // TODO: implemented yet in unenv
  //_linkedBinding,
  // TODO: implemented yet in unenv
  //_maxListeners,
  _preload_modules: _preload_modules2,
  _rawDebug: _rawDebug2,
  _startProfilerIdleNotifier: _startProfilerIdleNotifier2,
  _stopProfilerIdleNotifier: _stopProfilerIdleNotifier2,
  _tickCallback: _tickCallback2,
  abort: abort2,
  addListener: addListener2,
  allowedNodeEnvironmentFlags: allowedNodeEnvironmentFlags2,
  arch: arch2,
  argv: argv2,
  argv0: argv02,
  assert: assert2,
  availableMemory: availableMemory2,
  binding: binding2,
  chdir: chdir2,
  config: config2,
  constrainedMemory: constrainedMemory2,
  cpuUsage: cpuUsage2,
  cwd: cwd2,
  debugPort: debugPort2,
  dlopen: dlopen2,
  // TODO: implemented yet in unenv
  //domain,
  emit: emit2,
  emitWarning: emitWarning2,
  eventNames: eventNames2,
  execArgv: execArgv2,
  execPath: execPath2,
  exit: exit2,
  exitCode: exitCode2,
  features: features2,
  getActiveResourcesInfo: getActiveResourcesInfo2,
  getMaxListeners: getMaxListeners2,
  getegid: getegid2,
  geteuid: geteuid2,
  getgid: getgid2,
  getgroups: getgroups2,
  getuid: getuid2,
  hasUncaughtExceptionCaptureCallback: hasUncaughtExceptionCaptureCallback2,
  hrtime: hrtime2,
  // TODO: implemented yet in unenv
  //initgroups,
  kill: kill2,
  listenerCount: listenerCount2,
  listeners: listeners2,
  loadEnvFile: loadEnvFile2,
  memoryUsage: memoryUsage2,
  // TODO: implemented yet in unenv
  //moduleLoadList,
  off: off2,
  on: on2,
  once: once2,
  // TODO: implemented yet in unenv
  //openStdin,
  pid: pid2,
  platform: platform2,
  ppid: ppid2,
  prependListener: prependListener2,
  prependOnceListener: prependOnceListener2,
  rawListeners: rawListeners2,
  // TODO: implemented yet in unenv
  //reallyExit,
  release: release2,
  removeAllListeners: removeAllListeners2,
  removeListener: removeListener2,
  report: report2,
  resourceUsage: resourceUsage2,
  setMaxListeners: setMaxListeners2,
  setSourceMapsEnabled: setSourceMapsEnabled2,
  setUncaughtExceptionCaptureCallback: setUncaughtExceptionCaptureCallback2,
  setegid: setegid2,
  seteuid: seteuid2,
  setgid: setgid2,
  setgroups: setgroups2,
  setuid: setuid2,
  sourceMapsEnabled: sourceMapsEnabled2,
  stderr: stderr2,
  stdin: stdin2,
  stdout: stdout2,
  title: title2,
  umask: umask2,
  uptime: uptime2,
  version: version2,
  versions: versions2,
  /**
   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable
   */
  env,
  getBuiltinModule,
  nextTick
};
